#!/bin/bash

# do not edit below ############################################################

source /etc/wart-menu/wart.config

################################################################################

# function to display the main dialog menu
main_menu() {
  dialog --clear --title "Wart-wallet" \
    --menu "" 15 28 16 \
    1 "Wallet balance" \
    2 "Wallet address" \
    3 "Send transaction" \
    4 "Wallet files" \
    5 "Create wallet" \
    6 "Restore wallet" \
    7 "Print version" \
    8 "Help" \
    2>&1 >/dev/tty
}

# function for wallet command ##################################################
wallet_command() {
  "$WARTHOG_DIR"/wallet/./wart-wallet --file="$WALLET_JSON" "$CMD"
}

# function for dialog display ##################################################
display_function() {
  # display function
  display_result() {
    dialog --title "$BACKTITLE" \
      --no-collapse \
      --msgbox "$(wallet_command)" "$(echo "4+$(wallet_command | wc -l)" | bc 2>/dev/null)" "$(echo "5+$(wallet_command | wc -L)" | bc 2>/dev/null)"
  }
  display_result
}

# function to print wallet balance #############################################
print_balance() {
  # balance
  CMD="-b"
  # display function
  display_result() {
    dialog --title "$BACKTITLE" \
      --no-collapse \
      --msgbox "Balance: $(wallet_command) WART" 5 "$(echo "18+$(wallet_command | wc -L)" | bc 2>/dev/null)"
  }
  display_result
}

# function to print wallet address #############################################
print_address() {
  # address
  CMD="-a"
  # display function
  display_result() {
    dialog --title "$BACKTITLE" \
      --no-collapse \
      --msgbox "Address: $(wallet_command)" 5 "$(echo "13+$(wallet_command | wc -L)" | bc 2>/dev/null)"
  }
  display_result
}

# function to send transaction #################################################
send_tx() {
  TO_ADDRESS=$(dialog --inputbox "Enter recipient address:" 8 60 2>&1 >/dev/tty)
  AMOUNT=$(dialog --inputbox "Enter amount to send:" 8 60 2>&1 >/dev/tty)
  FEE=$(dialog --inputbox "Enter transaction fee:" 8 60 2>&1 >/dev/tty)
  NONCE=$(dialog --inputbox "Enter nonce:" 8 60 2>&1 >/dev/tty)
  # if any data
  if [[ -n "$TO_ADDRESS" && -n "$AMOUNT" && -n "$FEE" && -n "$NONCE" ]] &>/dev/null; then
    CMD="--send --to=$TO_ADDRESS --amount=$AMOUNT --fee=$FEE --nonce=$NONCE"
    # display function
    display_result() {
      dialog --title "$BACKTITLE" \
        --no-collapse \
        --msgbox "$(wallet_command)" 10 60
    }
    display_result
  else
    clear
    echo "Missing data!"
    sleep 1
  fi
}

# function for wallet files ####################################################
wallet_file() {
  # display function
  display_result() {
    dialog --title "$BACKTITLE" \
      --no-collapse \
      --msgbox "$(ls -lRt "$WARTHOG_DIR"/wallet/)" 0 0
  }
  display_result
}

# function for create wallet ###################################################
create_wallet() {
  dialog --title "Create Wallet" --yesno "Do you want to create a new wallet?" 7 60
  RESPONSE=$?
  if [ $RESPONSE -eq 0 ]; then
    CMD="--create"
    display_function
  fi
}

# function to restore wallet ###################################################
restore_wallet() {
  RESTORE_KEY=$(dialog --inputbox "Enter the private key to restore wallet:" 10 60 2>&1 >/dev/tty)
  # if any data
  if [[ -n "$RESTORE_KEY" ]] &>/dev/null; then
    CMD="--restore=$RESTORE_KEY"
    display_function
  fi
}

# function to display the version ##############################################
print_version() {
  # version
  CMD="--version"
  display_function
}

# function to display help #####################################################
print_help() {
  # help
  CMD="--help"
  display_function
}

# main loop ####################################################################
while true; do
  CHOICE=$(main_menu)

  case $CHOICE in
  "1") print_balance ;;  # print wallet balance
  "2") print_address ;;  # print wallet address
  "3") send_tx ;;        # send transaction
  "4") wallet_file ;;    # wallet files
  "5") create_wallet ;;  # create new wallet
  "6") restore_wallet ;; # restore old wallet
  "7") print_version ;;  # print wallet version
  "8") print_help ;;     # print help commands
  "*") break ;;
  esac
done

# END
